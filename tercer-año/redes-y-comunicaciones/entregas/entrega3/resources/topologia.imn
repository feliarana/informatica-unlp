node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ipv6 address 2001:db8:1234:8::2/64
	!
	interface eth1
	 ipv6 address 2001:db8:1234:9::2/64
	!
	interface eth0
	 ipv6 address 2001:db8:1234:1::1/64
	!
    }
    canvas c1
    iconcoords {154.0 182.0}
    labelcoords {154.0 214.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n2}
    interface-peer {eth2 n11}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:1::1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:c::1
	
	/sbin/ip route add 2001:db8:1234:7::/64 via 2001:db8:1234:8::1
	/sbin/ip route add 2001:db8:1234:5::/64 via 2001:db8:1234:8::1
	
	#RED X
	/sbin/ip route add 2001:db8:1234:3::/64 via 2001:db8:1234:9::1
	
	#RED Y
	/sbin/ip route add 2001:db8:1234:4::/64 via 2001:db8:1234:8::1
	
	#RED B
	/sbin/ip route add 2001:db8:1234:2::/64 via 2001:db8:1234:8::1
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth1
	 ipv6 address 2001:db8:1234:6::2/64
	!
	interface eth0
	 ipv6 address 2001:db8:1234:9::1/64
	!
    }
    canvas c1
    iconcoords {505.0 298.0}
    labelcoords {505.0 330.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n6}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	/sbin/ip route add 2001:db8:1234:5::/64 via 2001:db8:1234:6::1
	
	#RED A
	/sbin/ip route add 2001:db8:1234:1::/64 via 2001:db8:1234:9::2
	
	#RED B
	/sbin/ip route add 2001:db8:1234:2::/64 via 2001:db8:1234:6::1
	
	#RED X
	/sbin/ip route add 2001:db8:1234:3::/64 via 2001:db8:1234:6::1
	
	#RED Y
	/sbin/ip route add 2001:db8:1234:4::/64 via 2001:db8:1234:6::1
	}
    }
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth3
	 ipv6 address 2001:db8:1234:2::1/64
	 ip address 10.0.1.1/27
	!
	interface eth2
	 ipv6 address 2001:db8:1234:3::1/64
	 ip address 10.0.0.1/24
	!
	interface eth1
	 ipv6 address 2001:db8:1234:4::1/64
	!
	interface eth0
	 ipv6 address 2001:db8:1234:5::1/64
	!
    }
    canvas c1
    iconcoords {838.0 448.0}
    labelcoords {838.0 480.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n5}
    interface-peer {eth2 n9}
    interface-peer {eth3 n13}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:5::1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:4::1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:3::1
	
	/sbin/ip route add 2001:db8:1234:1::/64 via 2001:db8:1234:5::2
	
	/sbin/ip route add 2001:db8:1234:6::/64 via 2001:db8:1234:5::2
	/sbin/ip route add 2001:db8:1234:7::/64 via 2001:db8:1234:5::2
	/sbin/ip route add 2001:db8:1234:8::/64 via 2001:db8:1234:5::2
	/sbin/ip route add 2001:db8:1234:9::/64 via 2001:db8:1234:5::2
	}
    }
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {77.0 522.0}
    labelcoords {77.0 546.0}
    interface-peer {e0 n1}
    interface-peer {e1 n8}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {891.0 176.0}
    labelcoords {891.0 200.0}
    interface-peer {e0 n3}
    interface-peer {e1 n7}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth2
	 ipv6 address 2001:db8:1234:7::1/64
	!
	interface eth1
	 ipv6 address 2001:db8:1234:5::2/64
	!
	interface eth0
	 ipv6 address 2001:db8:1234:6::1/64
	!
    }
    canvas c1
    iconcoords {518.0 513.0}
    labelcoords {509.0 554.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    interface-peer {eth2 n11}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:6::1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:7::1
	
	/sbin/ip route add 2001:db8:1234:8::/64 via 2001:db8:1234:6::2
	/sbin/ip route add 2001:db8:1234:9::/64 via 2001:db8:1234:7::2
	
	#RED A
	/sbin/ip route add 2001:db8:1234:1::/64 via 2001:db8:1234:7::2
	
	#RED B
	/sbin/ip route add 2001:db8:1234:2::/64 via 2001:db8:1234:5::1
	
	#RED X
	/sbin/ip route add 2001:db8:1234:3::/64 via 2001:db8:1234:5::1
	
	#RED Y
	/sbin/ip route add 2001:db8:1234:4::/64 via 2001:db8:1234:5::1
	}
    }
}

node n7 {
    type router
    model host
    network-config {
	hostname n7
	!
	interface eth0
	 ipv6 address 2001:db8:1234:4::2/64
	!
    }
    canvas c1
    iconcoords {852.0 51.0}
    labelcoords {852.0 83.0}
    interface-peer {eth0 n5}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ipv6 address 2001:db8:1234:1::2/64
	!
    }
    canvas c1
    iconcoords {213.0 583.0}
    labelcoords {213.0 615.0}
    interface-peer {eth0 n4}
    services {StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:1::1
	รง
	/sbin/ip route add fe80::1/0 via 2001:db8:1234:1::1
	}
    }
}

node n9 {
    type lanswitch
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {492.0 106.0}
    labelcoords {492.0 130.0}
    interface-peer {e0 n3}
    interface-peer {e1 n10}
    interface-peer {e2 n12}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ipv6 address 2001:db8:1234:3::3/64
	 ip address 10.0.0.253/24
	!
    }
    canvas c1
    iconcoords {722.0 179.0}
    labelcoords {715.0 214.0}
    interface-peer {eth0 n9}
}

node n11 {
    type router
    model router
    network-config {
	hostname n11
	!
	interface eth1
	 ipv6 address 2001:db8:1234:7::2/64
	!
	interface eth0
	 ipv6 address 2001:db8:1234:8::1/64
	!
    }
    canvas c1
    iconcoords {280.0 382.0}
    labelcoords {280.0 414.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n6}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:8::1
	#/sbin/ip route add 3ffe:4::/64 via 2001:db8:1234:7::1
	
	/sbin/ip route add 2001:db8:1234:5::/64 via 2001:db8:1234:7::1
	
	#RED A
	/sbin/ip route add 2001:db8:1234:1::/64 via 2001:db8:1234:8::2
	
	#RED B
	/sbin/ip route add 2001:db8:1234:2::/64 via 2001:db8:1234:7::1
	
	#RED X
	/sbin/ip route add 2001:db8:1234:3::/64 via 2001:db8:1234:7::1
	
	#RED Y
	/sbin/ip route add 2001:db8:1234:4::/64 via 2001:db8:1234:7::1
	}
    }
}

node n12 {
    type router
    model host
    network-config {
	hostname n12
	!
	interface eth0
	 ipv6 address 2001:db8:1234:3::2/64
	 ip address 10.0.0.254/24
	!
    }
    canvas c1
    iconcoords {643.0 215.0}
    labelcoords {643.0 247.0}
    interface-peer {eth0 n9}
}

node n13 {
    type lanswitch
    network-config {
	hostname n13
	!
    }
    canvas c1
    iconcoords {623.0 696.0}
    labelcoords {623.0 720.0}
    interface-peer {e0 n3}
    interface-peer {e1 n14}
    interface-peer {e2 n15}
}

node n14 {
    type router
    model host
    network-config {
	hostname dhcp-server
	!
	interface eth0
	 ipv6 address 2001:db8:1234:2::2/64
	 ip address 10.0.1.30/27
	!
    }
    canvas c1
    iconcoords {357.0 638.0}
    labelcoords {357.0 670.0}
    interface-peer {eth0 n13}
    services {DefaultRoute SSH}
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	 ipv6 address 2001:db8:1234:2::3/64
	 ip address 10.0.1.29/27
	!
    }
    canvas c1
    iconcoords {788.0 619.0}
    labelcoords {788.0 651.0}
    interface-peer {eth0 n13}
    services {DefaultRoute}
}

link l1 {
    nodes {n4 n1}
    bandwidth 0
}

link l2 {
    color Green
    nodes {n1 n2}
    bandwidth 0
}

link l3 {
    color Blue
    nodes {n2 n6}
    bandwidth 0
}

link l4 {
    nodes {n6 n3}
    bandwidth 0
}

link l5 {
    nodes {n3 n5}
    bandwidth 0
}

link l6 {
    nodes {n7 n5}
    bandwidth 0
}

link l7 {
    nodes {n8 n4}
    bandwidth 0
}

link l8 {
    nodes {n9 n3}
    bandwidth 0
}

link l9 {
    nodes {n10 n9}
    bandwidth 0
}

link l10 {
    color Blue
    nodes {n1 n11}
    bandwidth 0
}

link l11 {
    color Blue
    nodes {n11 n6}
    bandwidth 0
}

link l12 {
    nodes {n12 n9}
    bandwidth 0
}

link l13 {
    nodes {n13 n3}
    bandwidth 0
}

link l14 {
    nodes {n14 n13}
    bandwidth 0
}

link l15 {
    nodes {n15 n13}
    bandwidth 0
}

annotation a1 {
    iconcoords {427.0 53.0 743.0 251.0}
    type rectangle
    label {RED X}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #c0641c
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

annotation a2 {
    iconcoords {782.0 10.0 964.0 217.0}
    type rectangle
    label {Red Y}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

annotation a3 {
    iconcoords {49.0 493.0 243.0 611.0}
    type rectangle
    label {Red A}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #30c0ff
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

annotation a4 {
    iconcoords {308.0 587.0 835.0 744.0}
    type rectangle
    label {Red B}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #f02091
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

